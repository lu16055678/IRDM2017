 
   
    
    
    
      Department of Computer Science 
    
 
     
       
    
 
   
 
    
    
    
     
     
      
      
      
      
    
 
     
     › Home
      ›› Current Students
      ›› Syllabus Index 2017-2018 (Provisional)
      ›› COMPGL ›› COMPGL02 - Modal Logic and Transition Systems 
    
 
   
 
    
    
    
     
     
      
      
       
       
       
        
        
        
         Mobile Version

        
 
       
 
        
      
 
       
       
       
        
       	Home
	Prospective Students
	Research
	Industry & Outreach
	Careers
	Current Students
	People
	About Us
	Women in Computer Science
	Staff Intranet

 
        
      
 
       
       
       
        
        
       
 
        
      
 
       
       
       
        
       
        
         
          
           
            
           

          
 
          
           
            
           

          
 
          
           
            
           

          
 
          
           
            
           

          

         

        

       
 
        
      
 
       
       
       
        
       
        Forthcoming Events

       
 
        
        
        
         
         	 New events will be posted here as soon as details become known. 


        
 
       
 
        
      
 
       
       
       
        
       
        
         
          
         

        

        

       
 
        
      
 
       
       
       
        
       
        

        
         
          
           
            
           

          
 
          
           
            
           

          

         

        

       
 
        
      
 
       
       
       
        
       
        
         
          
           
            
           

          

         
 
         
          
           
            
           

          

         

        

       
 
        
      
 
       
       
     
 
      
      
      
       
       COMPGL02 - Modal Logic and Transition Systems

       This database contains the 2017-18 versions of syllabuses. These are still being finalised and changes may occur before the start of the session.

       Syllabuses from the 2016-17 session are available here.

        
         
         
          
         	Code	COMPGL02
	Year	MSc
	Prerequisites	N/A
	Term	1
	Taught By	Robin Hirsch (100%)
	Aims	Transition systems are a simple, yet pervasive mathematical structure adapted to the description of discrete computing devices and processes. This course introduces various formal methods of reasoning about transition systems. The focus is on modal logic, an extension of classical logic with operators, which serves as a specification language for system properties and their verification. We will explore connections of modal logic with relational algebra, game theory, proof theory and automata, as well as its computational complexity and expressiveness. The second part of the course will focus on extensions of modal logic with fixed-point operators, which are essential to capture time-based properties of systems.
	Learning Outcomes	TBC
 

 
          
        
 
         
         
         
          
         
          Content

         
 
          
          
         The syllabus consists of the following parts 
 
         Part I: Modal Logic

         	Modal logic, dynamic logic: Syntax and semantics
	Completeness, Deduction, Complexity
	Behavioural equivalences on transition systems (traces, bisimulation)
	Algebras of relations
	Verification games
	Games and representations


         Part II: Modal Fixpoint Logic

         	Basic fixpoint theory; fixpoint properties of transition systems (safety, liveness…)
	Modal fixpoint logics: LTL, CTL, CTL*, the modal ?-calculus
	Algebraic semantics and game semantics
	Automata characterisations: Büchi and alternating automata.
	Automata-based model checking

 
          
        
 
         
         
         
          
         
          Method of Instruction

         
 
          
          
         2 hours of lectures and 2 hours of practicals/classes per week.
 
          
        
 
         
         
         
          
         
          Assessment

         
 
          
          
         The course has the following assessment components:

         	Coursework (20%)
	Written examination (2 hours, 80%)


         To pass this course, students must:

         	Obtain an overall pass mark of 50% for all sections combined.

 
          
        
 
         
         
         
          
         
          Resources

         
 
          
          
         Recommended texts
 Boehm, H-J., Adve, S.V., 2012. You don't know jack about shared variable. CACM, 55(2), p.48-54.
 Marino, D., Singh, A., Millstein, T., Musuvathi, M. and Narayanasamy, S., 2011. A case for an SC-preserving compiler. PLDI'11, p.199-210.
 Batty, M., Dodss, M., Gotsman, A., 2013. Library abstraction for C/c++ concurrency. POPL '13. p.235-248.
 Alglave, J., Maranget, L., Sarker, S., Sewell, P., 2010. Fences in weak memory models. CAV '10. p.258-272. 
 
         Further books and other resources will be indicated during the course.
 
          
        
 
         
       
 
      
 
       
     
 
      
    
 
     
   
 
    
    
    
     
     
      This page was last modified on 04 Apr 2017 and is maintained by 
      Teaching Administrator 
     
 
    
 
     
      
      Computer Science Department 
 
      University College London 
 
      Gower Street 
 
      London 
 
      WC1E 6BT 
 
     
 
      
        +44 (0)20 7679 7214 
 
     
 
      
         
     
 
      
     
 
    
 
     
      
      	 Disclaimer| 
	 Cookies| 
	 Accessibility| 
	 Privacy| 
	 Advanced Search| 
	 Help 

 
     
 
      
      Copyright © 1999- 2017 UCL 
 
     
 
      
     
 
    
 
   
 
    
   
 
  
  
 
