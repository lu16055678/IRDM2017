 
   
   My online coursework system
 
   
      
     
     
 
   To try the coursework, click the following link and use the following username and password at the login prompt:
 
   
      
     
     
 
   Username: anonymous
     
 
   Password: anonymous
     
 
   
      
     
     
 
   Link to demo:                   computer architecture coursework
     
 
                                             networks coursework
     
 
   
      
     
     
 
   You can try out the questions, as much as you like.
 
   
      
     
     
 
   Links to document sections:
     
 
   Rationale for development
     
 
   Question generation and random elements
     
 
   Management Interface
     
 
   Data Storage and other technical details
     
 
   
      
     
     
 
   There is a  much more detailed, partially complete technical manual
     
 
   
      
     
     
 
   Rationale for development:
      
 
   
      
     
     
 
   I developed this system as part of my drive to more fully understand web technologies such as JSP and Tomcat, and deepen my knowledge of JAVA. I also donâ€™t like marking. However, I also donâ€™t like questionnaire based courseworks, partcularly in my area of teaching, Computer Architecture and hardware, and I havenâ€™t been able to find a similar system to this: admittedly I havenâ€™t tried hard. Thus, I developed this coursework system where each question is generated from a combination of a JSP program that handles the user interface, and a Java object, that generates the question and answer. The system currently generates pure HTML so that the system should not be dependent on the client-side browser: the desire to make the system like this was based on my earlier experience of trying to use client-side applets in a coursework system.
     
 
   
      
     
     
 
   Question generation and random elements:
      
 
   
      
     
     
 
   The nature of the program generation is that it is particularly easy to generate questions based on some mathematical equation, and an automated question generation system is available to take a text based question description and generate the necessary JSP and Java file. One of the nice things about Java has been that it allows these files to be added to the coursework in a particularly easy way and without recourse to modifying the rest of the coursework system.
     
 
   
      
     
     
 
   Questions can have elements, which are generated on some random basis. In particular, numbers for questions can currently be random within a preset range and interval, (e.g. 200 to 1200 with an interval of 4), randomly selected from a set ( 12, 10, 36, 48 â€¦..888). This allows a much wider range of questions to be generated than questionnaire based system, and allows students to have multiple attempts at a question to improve their performance and allows correct answers to be given to wrong answers as the same question is unlikely to appear very soon. Questions are automatically checked and marks are added to a database. Users are given login names and passwords, and currently connect is made via an SSL link, as SSL is used to manage the userâ€™s session. 
     
 
   Mor complex questions can be developed, but this requires a Java program to be written, which is much more time consuming. There are several instances of this on the demo where assembler programming and processor architecture understanding is tested.
     
 
   
      
     
     
 
   A help page can be associated with each question: currently this should be in Html.
     
 
   
      
     
     
 
   Management Interface:
      
 
   
      
     
     
 
   Besides the coursework presentation interface, there is a management interface for setting up and testing the question set, managing login names, passwords and their distribution, marks analysis and output. There is also a mechanism for generating questions from a text file (XML-based): questions can be manually produced in JSP and Java code. 
     
 
   Question sets, individual and aggregated marks, and username and password details can be input and output to files in a form suitable for inport by Microsoft Excel and other spreadsheets.
     
 
   
      
     
     
 
   Data Storage and other technical details: 
      
 
   
       
      
      
 
   Data storage in the system is through a Mysql database. It should be straight-forward to change this to some other database, but this will need a small amount of Java programming to develop this. The Mysql database holds marks, username, passwords, and question sets.
     
 
   The system is based on Tomcat and JSP, and there is no client-side code: just pure HTML.
     
 
   However, there is no reason that client-side scripts cannot be inserted in the JSP file that manages a questions display.
     
 
   The SSL session system requires a cookie to be stored on the client side.
     
 
   
      
     
     
 
  
   
 
